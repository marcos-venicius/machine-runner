#!/bin/bash

CONFIG_FILE="./machine.config"
OLD_PROMPT="$PS1"

read_key() {
  local key="$1"

  while IFS= read -r line; do
    if [[ "$line" =~ ^$key=(.*)$ ]]; then
      echo "${BASH_REMATCH[1]}"
      break
    fi
  done < "$CONFIG_FILE"
}

connect_container() {
  name="$1"
  machine_id="$2"
  storage_location="$3"
  image_name="$4"
  container_name="$(echo $machine_id-$name | sha256sum | grep -oP "\w.*\w")"

  container_running=$(docker ps -a --format "{{.Names}}" | grep $container_name)

  if [ -n "$container_running" ]; then
    docker start $container_name
    docker exec -it $container_name /bin/sh
  else
    docker run --name $container_name --volume=/tmp/$machine_id/data:$storage -it --tty $image_name
  fi
}

remove_container() {
  name="$1"
  machine_id="$2"
  container_name="$(echo $machine_id-$name | sha256sum | grep -oP "\w.*\w")"

  docker container stop $container_name
  docker container rm $container_name
}

machine_prompt() {
  local prompt="$OLD_PROMPT"

  if [ -e "$CONFIG_FILE" ]; then
    prompt="ðŸ’» $OLD_PROMPT"

    machine_name="$(read_key name)"
    container_name="$(echo $machine_id-$name | sha256sum | grep -oP "\w.*\w")"
    image_name="$(read_key image)"
    storage="$(read_key storage)"
    machine_id="$(pwd | base64)"

    mkdir -p /tmp/$machine_id/data

    alias os_connect="connect_container $machine_name $machine_id $storage $image_name"
    alias os_info="echo -e '\nOS INFO:\n\nId: \t\t\t$machine_id\nName: \t\t\t$container_name\nImage: \t\t\t$image_name\nStorage Location: \t/tmp/$machine_id/data\n'"
    alias os_remove="remove_container"
  else
    prompt="$OLD_PROMPT"
  fi

  PS1="$prompt"
}

PROMPT_COMMAND=machine_prompt
