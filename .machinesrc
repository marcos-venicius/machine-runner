#!/bin/bash

CONFIG_FILE="./machine.config"
OLD_PROMPT="$PS1"
MACHINE_ID="$(pwd | base64 | sha256sum | grep -oP '[a-z0-9]+')"
MACHINE_STORAGE_LOCATION="/tmp/$MACHINE_ID/data"

read_key() {
  local key="$1"

  while IFS= read -r line; do
    if [[ "$line" =~ ^$key=(.*)$ ]]; then
      echo "${BASH_REMATCH[1]}"
      break
    fi
  done < "$CONFIG_FILE"
}

connect_container() {
  storage="$1"
  image_name="$2"

  container_running=$(docker ps -a --format "{{.Names}}" | grep $MACHINE_ID)

  if [ -n "$container_running" ]; then
    docker start $MACHINE_ID
    docker exec -it $MACHINE_ID /bin/sh
  else
    docker run --name $MACHINE_ID --volume=$MACHINE_STORAGE_LOCATION:$storage -it --tty $image_name
  fi
}

show_info() {
  image_name="$1"

  echo ""
  echo -e "\033[1;37mOS INFO\033[0m"
  echo ""
  echo -e "\033[1;36mID:\033[0m\t\t\t$MACHINE_ID"
  echo -e "\033[1;36mIMAGE:\033[0m\t\t\t$image_name"
  echo -e "\033[1;36mSTORAGE LOCATION:\033[0m\t$MACHINE_STORAGE_LOCATION"
  echo ""
}

remove_container() {
  docker container stop $MACHINE_ID
  docker container rm $MACHINE_ID
}

machine_prompt() {
  local prompt="$OLD_PROMPT"

  if [ -e "$CONFIG_FILE" ]; then
    prompt="ðŸ’» $OLD_PROMPT"

    machine_name="$(read_key name)"
    image_name="$(read_key image)"
    storage="$(read_key storage)"

    mkdir -p "$MACHINE_STORAGE_LOCATION"

    alias os_connect="connect_container $storage $image_name"
    alias os_info="show_info $image_name"
    alias os_remove="remove_container"
  else
    prompt="$OLD_PROMPT"
  fi

  PS1="$prompt"
}

PROMPT_COMMAND=machine_prompt
